package com.ebp.action;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.ParentPackage;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.ebp.domain.User;
import com.ebp.exception.LoginException;
import com.ebp.service.UserService;
import com.ebp.web.LoginFilter;
import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.validator.annotations.RequiredStringValidator;
import com.opensymphony.xwork2.validator.annotations.StringLengthFieldValidator;
@Namespace("/ebp")
@ParentPackage("struts-default")
@Action(value="Login")
@Controller
@Scope("prototype")
@Results({
	@Result(name="success",type="redirect", location="/ebp/index.jsp"), 
	@Result(name="input", location="/ebp/login.jsp")
})
public class LoginAction extends ActionSupport {

	private static final long serialVersionUID = 1L;
	
	private String username;
	private String password;
	private String code;
	private String forwardUrl;
	@Resource
	private UserService userservice;
	@RequiredStringValidator(
			key = "error.login.username.required",
			trim = true,
			shortCircuit = true
		)
		@StringLengthFieldValidator(
			key = "error.usernameField.length",
			minLength = "4",
			maxLength = "20"
		)
	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	@RequiredStringValidator(
			key = "error.login.password.required",
			trim = true,
			shortCircuit = true
		)
		@StringLengthFieldValidator(
			key = "error.passwordField.length",
			minLength = "6",
			maxLength = "30"
		)
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	@RequiredStringValidator(
	        key = "error.code.crequested",
	        trim = true
	    )
	public String getCode() {
		return code;
	}
	public void setCode(String code) {
		this.code = code;
	}
	 @Override
	    public String execute() {
		 	ActionContext ctx = ActionContext.getContext(); 
	        HttpServletResponse response = (HttpServletResponse)ctx.get(ServletActionContext.HTTP_RESPONSE);
	        HttpServletRequest request = (HttpServletRequest)ctx.get(ServletActionContext.HTTP_REQUEST);
		 	HttpSession session = request.getSession();
			
			System.out.println(session.getAttribute("authCode")+","+code);
			
			if(code.equals(session.getAttribute("authCode"))){
				
			}else{
				addFieldError("code", getText("error.code.crequested"));
				//request.getRequestDispatcher("/ebp/register.jsp").forward(request, response);
				return INPUT;
			}
	    	// 1. 执行认证逻辑
	        
	        User user = null;
	        try {
	        	user = userservice.login(username, password);
	        } catch (LoginException e) { // 2. 认证失败
	            this.addActionError(getText("error.login.failure", new String[]{e.getMessage()}));
	            return INPUT; // 3. 转至登录页面
	        }
	        // 4. 获取request对象
	        // 5. 获取session对象
//	        // 6. 把AdminUser对象存储至Session对象中
//	        session.setAttribute(LoginFilter.ATTR_ADMINUSER, user);  
//	        // 7. 在session中获取用户之前访问的路径
//	        forwardUrl = (String)session.getAttribute(LoginFilter.ATTR_NEXTURL); 
//	        if (forwardUrl == null) forwardUrl = "/ebp/login.jsp";     // when session timeout
	        session.setAttribute("user", user);
	        return SUCCESS;
	    }
	
}

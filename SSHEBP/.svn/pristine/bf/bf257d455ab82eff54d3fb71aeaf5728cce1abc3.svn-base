package com.ebp.action;

import javax.annotation.Resource;
import javax.security.auth.login.LoginException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.ParentPackage;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.ebp.domain.Adminuser;
import com.ebp.service.AdminService;
import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.validator.annotations.RequiredStringValidator;

@Namespace(value="/admin")
@ParentPackage(value="struts-default")
@Action(value="AdminLogin")
@Controller
@Scope("protoType")
@Results({  
   @Result(name="success",type="redirect", location="/admin/AdminUserList.action"), 
   @Result(name="input", location="/admin/adminLogin.jsp") 
})
public class AdminLoginAction extends ActionSupport {

	private static final long serialVersionUID = -9150858206465110795L;
	
	private String forwardUrl;
	
    private String username;
    private String password;
    
    @Resource
    private AdminService adminService;

    public String getForwardUrl() {
        return forwardUrl;
    }

    @RequiredStringValidator(
        key = "error.login.username.required",
        trim = true
    )
    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @RequiredStringValidator(
        key = "error.login.password.required",
        trim = true
    )
    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Override
    public String execute() {
    	// 1. 执行认证逻辑
        
        Adminuser adminUser = null;
        try {
        	adminUser = adminService.getAdminuser(username, password);
        } catch (LoginException e) { // 2. 认证失败
            this.addActionError(getText("error.login.failure", new String[]{e.getMessage()}));
            return INPUT; // 3. 转至登录页面
        }
        
        // 4. 获取request对象
        ActionContext ctx = ActionContext.getContext(); 
        HttpServletRequest request = (HttpServletRequest)ctx.get(ServletActionContext.HTTP_REQUEST);
        // 5. 获取session对象
        HttpSession session = request.getSession();
        // 6. 把AdminUser对象存储至Session对象中
        session.setAttribute("adminUser", adminUser);  
        return SUCCESS;
    }

}

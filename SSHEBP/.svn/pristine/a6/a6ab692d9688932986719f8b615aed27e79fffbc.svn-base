package com.ebp.dao;

import java.sql.SQLException;
import java.util.List;

import javax.annotation.Resource;

import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.springframework.dao.DataAccessException;
import org.springframework.orm.hibernate3.HibernateCallback;
import org.springframework.orm.hibernate3.HibernateTemplate;
import org.springframework.stereotype.Repository;

import com.ebp.domain.Book;
import com.ebp.exception.BookAddExecption;
import com.ebp.exception.BookExistsExecption;
import com.ebp.exception.BookNumNotEnoughException;
import com.ebp.exception.BookUpdateExecption;
import com.ebp.formbean.QueryBean;
import com.ebp.service.QueryResult;

@Repository
public class BookDAO {
	
	@Resource
	private HibernateTemplate hibernateTemplate;
	
	
	/**
	 * @liqiang
	 * @param id
	 * @return
	 * @throws BookExistsExecption 
	 */
	public Book getBooksById(int id) throws BookExistsExecption{
		Book book = null;
		try{
			book = hibernateTemplate.get(Book.class, id);
		} catch (DataAccessException e) {
			e.printStackTrace();
			throw new BookExistsExecption("不存在");
		}
		return book;
	}
	
	/**@author liqiang
	 * 查询所有书籍
	 * @throws BookExistsExecption 
	 */
	public List<Book> queryPage(final int maxLines, final int page) {
		final String hql = "select b from Book b";
		List<Book> list = hibernateTemplate.executeFind(new HibernateCallback() {
			public Object doInHibernate(Session session) 
				throws HibernateException, SQLException{
				Query query = session.createQuery(hql);
				query.setFirstResult(page * maxLines);
				query.setMaxResults(maxLines);
				return  query.list();
			}
		});
		return list;
	}
		public QueryResult<Book> getAllBook(QueryBean queryBean) throws BookExistsExecption {
		
		List<Book> list = queryPage(queryBean.getstartIndex(),queryBean.getPageSize());
		QueryResult<Book> result = null;
		String hql = "select count(b) count from Book b where b.delete_id = 0";
		int totalRecode = 0;
		try {
			List list2 = hibernateTemplate.find(hql);
			totalRecode = (Integer)list2.get(0);
		} catch (DataAccessException e) {
			e.printStackTrace();
			throw new BookExistsExecption("系统错误");
		}
		result = new QueryResult<Book>();
		result.setList(list);
		result.setTotalRecord(totalRecode);
		return result;
	}
		
	/**author liqiang
	 * 添加书籍
	 * @throws BookAddExecption 
	 */
		public void insert(Book book) throws BookAddExecption{
			try {
				hibernateTemplate.save(book);
			} catch (DataAccessException e) {
				throw new BookAddExecption("添加错误");
			}
		}
		/**
		 * author liqiang
		 * @param name
		 * @return
		 * @throws BookExistsExecption
		 */
		public Book getBookByName(String name) throws BookExistsExecption{
		Book book = null;
		String hql = "select b from Book b where name=?";
		try {
			List<Book> list = hibernateTemplate.find(hql,name);
			book = list.get(0);
			if(book == null){
				throw new BookExistsExecption("没有此书"); 
			}
		} catch (DataAccessException e) {
			throw new BookExistsExecption("系统错误");
		}
		return book;
		
	}
		/**
		 * author liqiang
		 * @param book
		 * @throws BookUpdateExecption
		 */
	public void updateBook(Book book) throws BookUpdateExecption{
		try {
			hibernateTemplate.update(book);
		} catch (DataAccessException e) {
			throw new BookUpdateExecption("更新失败");
		}
	}
}

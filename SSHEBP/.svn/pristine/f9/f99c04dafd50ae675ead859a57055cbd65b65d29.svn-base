package com.ebp.web;

import java.io.IOException;


import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebFilter;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.ebp.domain.User;

@WebFilter(filterName="LoginFilter", urlPatterns={"/ebp/*"})
public class LoginFilter implements Filter {

	private static final String LOGIN_PREFIX = "/ebp/";
	private static final String LOGIN_KEYWORD = "Login";
	private static final String LOGIN_PAGE = "Login.jsp";
	public static final String ATTR_ADMINUSER = "login.adminUser";
	public static final String ATTR_NEXTURL = "login.nextUrl";
	
	@Override
	public void init(FilterConfig filterConfig) throws ServletException {
		
	}
	
	@Override
	public void doFilter(ServletRequest request, ServletResponse response,
			FilterChain chain) throws IOException, ServletException {
		// 1. 获取session对象
		HttpServletRequest req = (HttpServletRequest)request;
        HttpSession session = req.getSession();
        
        // 2. 获取当前请求的URI
        String requestURI = req.getRequestURI();
        String uri = requestURI.substring(requestURI.indexOf(LOGIN_PREFIX));
        if (uri.indexOf(LOGIN_KEYWORD) == -1) { // 该请求是否为用户认证成功后访问的资源
        	// 3. 在session中获取AdminUser对象
            User user = (User)session.getAttribute(ATTR_ADMINUSER);
            if (user == null) { // 用户没有登录
            	// 4. 把用户访问的地址存储至session中
                session.setAttribute(ATTR_NEXTURL, uri);
                // 5. 把页面重定向至登录页
                String loginUri = req.getContextPath() + LOGIN_PREFIX + LOGIN_PAGE;
                ((HttpServletResponse)response).sendRedirect(loginUri);
                return;               
            } 
        }
        chain.doFilter(request, response);		
	}
	
	@Override
	public void destroy() {
		
	}
	
}

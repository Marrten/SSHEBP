package com.ebp.action;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.struts2.ServletActionContext;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.ParentPackage;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import com.ebp.domain.Adminuser;
import com.ebp.exception.LoginException;
import com.ebp.service.AdminService;
import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.validator.annotations.RequiredStringValidator;
import com.opensymphony.xwork2.validator.annotations.StringLengthFieldValidator;

/**
 * 
 * @author Chen
 *
 */

@Namespace(value="/admin")
@ParentPackage(value="struts-default")
@Action(value="AdminLogin")
@Controller
@Scope("prototype")
@Results({  
   @Result(name="success",type="redirect", location="/${forwardUrl}"), 
   @Result(name="input", location="/admin/adminLogin.jsp") 
})
public class AdminLoginAction extends ActionSupport {

	private static final long serialVersionUID = -9150858206465110795L;
	
	private String forwardUrl;
	
    private String username;
    private String password;
    
    @Resource
    private AdminService adminService;

    public String getForwardUrl() {
        return forwardUrl;
    }

    @RequiredStringValidator(
		key="error.login.username.required",
		trim=true,
		shortCircuit=true
	)
	@StringLengthFieldValidator(
		key="error.usernameField.length",
		minLength="4",
		maxLength="20"
	)
    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @RequiredStringValidator(
		key="error.login.password.required",
		trim=true,
		shortCircuit=true
	)
	@StringLengthFieldValidator(
		key="error.passwordField.length",
		minLength="6",
		maxLength="20"
	)
    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Override
    public String execute() {
    	
    	// 2. 获取request对象
        ActionContext ctx = ActionContext.getContext(); 
        HttpServletRequest request = (HttpServletRequest)ctx.get(ServletActionContext.HTTP_REQUEST);
		// 3. 校验成功
		HttpSession session = request.getSession();
		try {
			// 用户认证标记, 存储在Session作用域中
			Adminuser admin = adminService.getAdminuser(username, password);
			
			session.setAttribute("admin", admin);
			
			String uri = (String)session.getAttribute("uri");
			
			if(uri != null){
				forwardUrl = uri;
				return SUCCESS;
			}
			forwardUrl = "admin/AdminUserList.action";
			return SUCCESS;
		}catch (LoginException e) {
			e.printStackTrace();
			this.addActionError(e.getMessage());
			return INPUT;
		}
    	
    }

}

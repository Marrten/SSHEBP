package com.ebp.service;

import java.util.Date;







import javax.annotation.Resource;
import javax.security.auth.login.LoginException;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import com.ebp.dao.UserDAO;
import com.ebp.domain.User;
import com.ebp.exception.RegisterException;
import com.ebp.exception.UserException;
import com.ebp.exception.UserExistsException;
import com.ebp.utils.MD5Util;

@Service
public class UserService {
	@Resource
	private UserDAO userDAO;
	
	public void register(String username,String password,Date registerTime) throws RegisterException{
		password = MD5Util.getProcessor(password);
		User user = new User(username, password, registerTime);
		UserDAO userDAO = new UserDAO();
		userDAO.register(user);
	}
	
	public User login(String username, String password) throws LoginException{
		password = MD5Util.getProcessor(password);
		return userDAO.login(username,password);
	}
	
	public User getUser(String username) throws UserExistsException{
		User users = userDAO.getUserByName(username);
		return users;
	}
	/**
	 * @author wupanhua
	 * @param user
	 * @throws UserException
	 */
	@Transactional(propagation=Propagation.NOT_SUPPORTED, readOnly=true)
	public void chargeMoney(User user) throws UserException {
		userDAO.updateUsers(user);
	}
	
	/**
	 * @author wupanhua
	 * @param user
	 * @throws UserException
	 */
	@Transactional(propagation=Propagation.NOT_SUPPORTED, readOnly=true)
	public void ModifyUserInfromation(User user) throws UserException {
		userDAO.updateUsers(user);
	}
}
